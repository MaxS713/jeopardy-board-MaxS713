
/*Nothing much different from the index.css - a lot of the same style...*/

html{
    height: 100%;
}

body{
    background-color: #010B12;
    font-family: Helvetica;
    max-height: 100%;
    max-width: 100%;
    margin: 0 auto;
}

main {
    margin: 2vh auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

#title{
    line-height: 200%;
    margin:3vh auto 0 auto;
}

.bigger{
    display: inline-block;
    font-size: 2.5vw;
    color: #d7dadd;
}

.bigger::first-letter {
    font-size: 3.5vw;
}

#player-turn{
    margin-top: 1.5vh;
    text-align: center;
    font-size: 2vmax;
    color: #d7dadd;
}

/*Jeopardy grid, you say? lemme use a grid layout*/
#grid {
    display:grid;
    text-align: center;
    margin-top: 3vh;
    color:#d7dadd;
    grid-template-columns: repeat(6, minmax(15%, 1fr)); /*I used 15% because 100%/6 â‰ˆ 15%, 
    tried different things but I wasn't sure 
    how else to have it be 6 columns that responsively fit in the whole width...*/
    gap: 1.5vmax 1.5vmax;
    font-size: 1.5vmax;
}

.grid-category, .grid-item {
    outline: 0.3vmax solid #1B5176;
    padding: 0.2vw 1vw;
}

.grid-category{
    padding: 1.5vw 1vw; /*More padding for the Category boxes*/ 
}

input{
    display:block;
    margin: 3vh auto 0 auto;
    padding: 1vh 2vw;
    font-size: min(max(2vw), 20px);
}

#buttons-score{
    display:flex;
    justify-content: center;
}

button{
    color:#d7dadd;
    background-color: #1B5176;
    border: none;
    border-radius: 2px;
    margin: 2vh 0.4em 0;
    font-size: min(max(2vw), 20px);
    padding: 0.4em 0.8em;
    letter-spacing: 0.1em;
}

button:hover {
    color:#010B12;
    background-color: #5EBDF3;
}

span{
    color: #d7dadd;
    font-size: min(max(1.8vw), 18px);
    margin-left: 10vw;
    margin-right: 10vw;
}

/*Don't think we'll need the link to the next page later, 
for now it just sits in the top right corner (it would get in the way of the rest
in the lower right corner on a phone screen)*/
#next-page{
    position: absolute;
    top:5%;
    right:5%;
}

/*So the grid is very squished on portrait mode on a phone so, this system makes everything disapear
and asks the user to rotate his phone - I found that a width<500px captures most devices*/

#rotate-phone { /*If the screen is wide enough, the prompt to rotate the phone doesn't appear*/
    display:none;
}

@media screen and (max-width: 500px) {
    main{
        display:none; /*If the screen isn't wide enough, 
        everything disapear exept for the prompt to rotate the phone*/
    }
    #rotate-phone { 
        display: block;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%); /*Found online that this was a way
        to center something vertically and horizontaly - looked over-complicated for something simple
        but it works*/
        text-align: center;
        color:#d7dadd;
    }
}

footer{
    text-align: center;
    color:#010B12;
    position: absolute;
    font-size: 2vh;
    margin-left: auto;
    margin-right: auto;
    left: 0;
    right: 0;
    bottom:1vh;
    padding: 0.8vh;
    width:40%;
    background-color: #1B5176;
}
